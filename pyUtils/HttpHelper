import requests
import xmlrpc
from functools import wraps
import socket

#decorator make doPost and doGet act like safari
def useSafari(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        safariHeaders={
            'User-Agent' : 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36',
            'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
            'Accept-Encoding' : 'gzip',
            'Accept-Language' : 'zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4'
        }
        if 'headers' in kwargs:
            temp={**safariHeaders,**kwargs['headers']}
            kwargs['headers']=temp
        else:
            temp={**safariHeaders,**args[3]}
            args=(args[0],args[1],args[2],temp)
        return func(*args,**kwargs)
    return wrapper

def doPost(url,data,mediaType='form',headers={}):
    if mediaType in ('json','JSON','Json'):
        response = requests.Session.post(url,json=data,headers=headers)
    elif mediaType in ('form','FORM','Form'):
        response = requests.post(url,data=data,headers=headers)
    return response

def doGet(url,data,headers={}):
    response = requests.Session.get(url,params=data,headers=headers)
    return response

def rpcSend(url, cmd, data):
    with xmlrpc.client.ServerProxy(url) as proxy:
        response=proxy.send_cmd(cmd, data)
    return response

def getIP():
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(('8.8.8.8', 80))
        ip = s.getsockname()[0]
    finally:
        s.close()
    return ip
